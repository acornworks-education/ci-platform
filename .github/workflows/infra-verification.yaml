name: verfify-platform
run-name: Verify IaC
on:
  pull_request:
  push:
    branches:
      - main
jobs:
  # infracost-analysis:
  #   name: Cloud cost analysis
  #   runs-on: ubuntu-latest
  #   steps:
  #   # https://github.com/marketplace/actions/configure-aws-credentials-action-for-github-actions
  #   - name: Configure AWS Credentials
  #     uses: aws-actions/configure-aws-credentials@v1
  #     with:
  #       aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #       aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #       aws-region: ap-southeast-2
  #       role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
  #       role-duration-seconds: 1200
  #   - name: Checkout Source Code
  #     uses: actions/checkout@v3
  #   # https://github.com/infracost/actions/
  #   - name: Setup Infracost
  #     uses: infracost/actions/setup@v2
  #   - name: Configure Infracost
  #     run: |
  #       infracost configure set pricing_api_endpoint http://202.138.30.211:60001
  #       infracost configure set api_key 27D7AFPwHEu5nhmy27aBRbFrwNfGzhe0
  #   - name: Checkout base branch
  #     if: ${{ github.event_name == 'pull_request' }}
  #     uses: actions/checkout@v3
  #     with:
  #       ref: '${{ github.event.pull_request.base.ref }}'    
  #   - name: Generate Infracost cost estimate baseline
  #     run: |
  #       infracost breakdown --path=./terraform \
  #                           --format=json \
  #                           --out-file=/tmp/infracost-base.json    
  #   - name: Checkout PR branch
  #     uses: actions/checkout@v3
  #   - name: Generate Infracost diff
  #     run: |
  #       infracost diff --path=./terraform \
  #                       --format=json \
  #                       --compare-to=/tmp/infracost-base.json \
  #                       --out-file=/tmp/infracost.json
  #   - name: Post Infracost comment
  #     run: |
  #         infracost comment github --path=/tmp/infracost.json \
  #                                   --repo=$GITHUB_REPOSITORY \
  #                                   --github-token=${{github.token}} \
  #                                   --pull-request=${{github.event.pull_request.number}} \
  #                                   --behavior=update
  # conftest:
  #   runs-on: ubuntu-latest
  #   container: openpolicyagent/conftest:latest
  #   steps:
  #     - name: Code checkout
  #       uses: actions/checkout@v3
  #     - name: Validate Terraform policy
  #       run: |
  #         conftest pull git::https://github.com/rallyhealth/conftest-policy-packs.git//policies
  #         conftest test -p ./policy --all-namespaces -o github ./terraform/main.tf
  # trufflehog:
  #   runs-on: ubuntu-latest
  #   container: trufflesecurity/trufflehog:latest
  #   steps:
  #     - name: Code checkout
  #       uses: actions/checkout@v3
  #     - name: TruffleHog Scan
  #       run: |
  #         trufflehog filesystem --directory=. --only-verified --fail
  # trivy:
  #   runs-on: ubuntu-latest
  #   needs:
  #     - trufflehog
  #     - conftest
  #   steps:
  #     - name: Code checkout
  #       uses: actions/checkout@v3
  #     - name: Run Trivy vulnerability scanner in repo mode
  #       uses: aquasecurity/trivy-action@master
  #       with:
  #         scan-type: 'fs'
  #         ignore-unfixed: true
  #         format: 'sarif'
  #         output: 'trivy-results.sarif'
  #         severity: 'HIGH'
  #     - name: Upload Trivy scan results to GitHub Security tab
  #       uses: github/codeql-action/upload-sarif@v2
  #       with:
  #         sarif_file: 'trivy-results.sarif'      
  sonarqube-job:
    runs-on: ubuntu-latest
    # needs:
    #   - trufflehog
    #   - conftest
    steps:
      - name: Code checkout
        uses: actions/checkout@v3
      - name: Set SonarQube project name
        run: |
          BRANCH_NAME=$(echo $GITHUB_REF_NAME | sed -e "s/\//\-/g")
          REPO_NAME=$(echo $GITHUB_REPOSITORY | sed -e "s/\//\-/g")
          PROJECT_NAME="${REPO_NAME}-${BRANCH_NAME}"

          echo $PROJECT_NAME
          echo "sonarqube_project_name=${PROJECT_NAME}" >> $GITHUB_ENV
      - name: Create a Sonarqube project
        run: |
          curl -u squ_5a083762b884622e39abd0223c2ef124c602a92b: \
          -X POST \ 
          -H "Content-Type: application/x-www-form-urlencoded" \ 
          http://202.138.30.211:60002/api/projects/create \ 
          -d "name=${{env.sonarqube_project_name}}&project=${{env.sonarqube_project_name}}"          
      # https://github.com/marketplace/actions/official-sonarqube-scan
      # - name: SonarQube Scan
      #   uses: sonarsource/sonarqube-scan-action@master
      #   env:
      #     SONAR_TOKEN: "squ_5a083762b884622e39abd0223c2ef124c602a92b"
      #     SONAR_HOST_URL: "http://202.138.30.211:60002"
      #   with:
      #     projectBaseDir: .
      #     args: >
      #       -Dsonar.projectKey=${{env.sonarqube_project_name}}
      - name: SonarQube Quality Gate check
        id: sonarqube-quality-gate-check
        uses: sonarsource/sonarqube-quality-gate-action@master
        # Force to fail step after specific time.
        timeout-minutes: 5
        env:
          SONAR_TOKEN: "squ_5a083762b884622e39abd0223c2ef124c602a92b"
          SONAR_HOST_URL: "http://202.138.30.211:60002"
      - name: Delete a Sonarqube project
        run: |
          curl -u squ_5a083762b884622e39abd0223c2ef124c602a92b: \
          -X POST \ 
          -H "Content-Type: application/x-www-form-urlencoded" \ 
          http://202.138.30.211:60002/api/projects/delete \ 
          -d "project=${{env.sonarqube_project_name}}"          

